name: CI & Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  tests-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Check for changed paths
        id: path_filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            docker:
              - 'docker/Dockerfile'
            deploy:
              - 'woocommerce-koban-sync/**'
              - '.github/workflows/deploy.yml'

      - name: Set up Docker Buildx
#        if: steps.path_filter.outputs.docker == 'true'
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Restore build cache
#        if: steps.path_filter.outputs.docker == 'true'
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('docker/Dockerfile') }}
          restore-keys: ${{ runner.os }}-docker-

      - name: Build Docker Image (cached)
#        if: steps.path_filter.outputs.docker == 'true'
        run: |
          echo "Docker-related files changed. Rebuilding image with Buildx cache..."
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            --tag your-docker-image:latest \
            --load \
            docker

          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Start containers (CI mode)
        run: make wp-up-ci

      - name: Wait for WordPress
        run: |
          echo "Waiting for WordPress at http://localhost:8080 ..."
          for i in {1..30}; do
            if curl -sSf http://localhost:8080/wp-admin/install.php >/dev/null; then
              echo "WordPress is up!"
              break
            else
              echo "Still not ready. Sleeping..."
              sleep 5
            fi
          done

      - name: Lint
        run: make lint

      - name: Tests
        run: make tests

      - name: Tear down
        if: always()
        run: make wp-down

      - name: Deploy via SFTP
        if: ${{ success() && steps.path_filter.outputs.deploy == 'true' }}
        uses: wlixcc/SFTP-Deploy-Action@v1.2.5
        with:
          username: ${{ secrets.SFTP_USER }}
          server: ${{ secrets.SFTP_HOST }}
          ssh_private_key: ${{ secrets.SFTP_KEY }}
          local_path: 'woocommerce-koban-sync'
          remote_path: ${{ secrets.SFTP_REMOTE_PATH }}
          sftpArgs: '-o ConnectTimeout=5'